{"version":3,"file":"js/144.7ec08cda.js","mappings":"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","sources":["webpack://pd/../../../src/components/VTabs/VTab.tsx","webpack://pd/../../../src/components/VSlideGroup/helpers.ts","webpack://pd/../../../src/components/VSlideGroup/VSlideGroup.tsx","webpack://pd/../../../src/components/VTabs/VTabs.tsx","webpack://pd/../../../src/components/VTabs/shared.ts"],"sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { animate, genericComponent, pick, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport const VTab = genericComponent()({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n","export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { useDisplay } from '@/composables'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed, ref, watch } from 'vue'\nimport { clamp, genericComponent, IN_BROWSER, useRender } from '@/util'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: [SlideGroupSlot]\n  prev: [SlideGroupSlot]\n  next: [SlideGroupSlot]\n}\n\nexport const VSlideGroup = genericComponent<VSlideGroupSlots>()({\n  name: 'VSlideGroup',\n\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol,\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next',\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active',\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = ref(false)\n    const scrollOffset = ref(0)\n    const containerSize = ref(0)\n    const contentSize = ref(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = ref(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = ref(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = [...contentRef.value.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n        ]}\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VSlideGroup } from '@/components/VSlideGroup'\nimport { VTab } from './VTab'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n\n  props: {\n    alignTabs: {\n      type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n      default: 'start',\n    },\n    color: String,\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    fixedTabs: Boolean,\n    items: {\n      type: Array as PropType<TabItem[]>,\n      default: () => ([]),\n    },\n    stacked: Boolean,\n    bgColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    sliderColor: String,\n    modelValue: null,\n    mandatory: {\n      type: [Boolean, String] as PropType<boolean | 'force'>,\n      default: 'force',\n    },\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => (\n      <VSlideGroup\n        v-model={ model.value }\n        class={[\n          'v-tabs',\n          `v-tabs--${props.direction}`,\n          `v-tabs--align-tabs-${props.alignTabs}`,\n          {\n            'v-tabs--fixed-tabs': props.fixedTabs,\n            'v-tabs--grow': props.grow,\n            'v-tabs--stacked': props.stacked,\n          },\n          densityClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={[\n          { '--v-tabs-height': convertToUnit(props.height) },\n          backgroundColorStyles.value,\n        ]}\n        role=\"tablist\"\n        symbol={ VTabsSymbol }\n        mandatory={ props.mandatory }\n        direction={ props.direction }\n      >\n        { slots.default ? slots.default() : parsedItems.value.map(item => (\n          <VTab { ...item } key={ item.title } />\n        )) }\n      </VSlideGroup>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n","import type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n"],"names":["VTab","genericComponent","name","props","fixed","Boolean","icon","String","Function","Object","prependIcon","IconValue","appendIcon","stacked","title","ripple","type","default","color","sliderColor","hideSlider","direction","makeTagProps","makeRouterProps","makeGroupItemProps","selectedClass","makeThemeProps","setup","_ref","slots","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","useTextColor","isHorizontal","computed","isSelected","ref","rootEl","sliderEl","updateSlider","_ref2","value","prevEl","$el","parentElement","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","animate","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","standardEasing","useRender","btnProps","pick","_createVNode","VBtn","_mergeProps","VTabsSymbol","undefined","bias","val","c","x","calculateUpdatedOffset","selectedElement","containerSize","contentSize","isRtl","currentScrollOffset","clientSize","clientWidth","clientHeight","offsetStart","offsetLeft","offsetTop","adjustedOffsetStart","totalSize","itemOffset","additionalOffset","min","calculateCenteredOffset","offsetCentered","VSlideGroupSymbol","Symbol","for","VSlideGroup","centerActive","symbol","nextIcon","prevIcon","showArrows","validator","v","includes","makeGroupProps","emits","useRtl","mobile","useDisplay","group","useGroup","isOverflowing","scrollOffset","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","firstSelectedIndex","selected","length","items","findIndex","item","id","lastSelectedIndex","IN_BROWSER","frame","watch","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","disableTransition","startTouch","startOffset","onTouchstart","e","touches","onTouchmove","onTouchend","maxScrollOffset","onScroll","isFocused","onFocusin","el","composedPath","onFocusout","onFocus","relatedTarget","contains","focus","onKeydown","key","location","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","querySelectorAll","filter","hasAttribute","scrollTo","newAbsoluteOffset","clamp","contentStyles","scrollAmount","transition","willChange","slotProps","next","prev","select","hasAffixes","hasPrev","hasNext","tag","onClick","VFadeTransition","VIcon","parseItems","map","VTabs","alignTabs","fixedTabs","bgColor","grow","height","Number","modelValue","mandatory","makeDensityProps","model","useProxiedModel","parsedItems","densityClasses","useDensity","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","provideDefaults","$event","convertToUnit"],"sourceRoot":""}