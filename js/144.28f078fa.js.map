{"version":3,"file":"js/144.28f078fa.js","mappings":"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","sources":["webpack://pd/../../../src/components/VProgressCircular/VProgressCircular.tsx","webpack://pd/../../src/composables/selectLink.ts","webpack://pd/../../../src/components/VBtn/VBtn.tsx","webpack://pd/../../../src/components/VTabs/VTab.tsx","webpack://pd/../../../src/components/VSlideGroup/helpers.ts","webpack://pd/../../../src/components/VSlideGroup/VSlideGroup.tsx","webpack://pd/../../../src/components/VTabs/VTabs.tsx","webpack://pd/../../../src/components/VTabs/shared.ts","webpack://pd/../../src/util/animation.ts","webpack://pd/../../src/util/box.ts","webpack://pd/../../src/util/easing.ts"],"sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VProgressCircular = genericComponent()({\n  name: 'VProgressCircular',\n\n  props: {\n    bgColor: String,\n    color: String,\n    indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n    modelValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'div' }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const root = ref<HTMLElement>()\n\n    const { themeClasses } = provideTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value\n        ? Number(props.size)\n        : contentRect.value\n          ? contentRect.value.width\n          : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    watchEffect(() => {\n      intersectionRef.value = root.value\n      resizeRef.value = root.value\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ root }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        ) }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressCircular = InstanceType<typeof VProgressCircular>\n","// Utilities\nimport { nextTick, watch } from 'vue'\n\n// Types\nimport type { UseLink } from './router'\n\nexport function useSelectLink (link: UseLink, select?: (value: boolean, e?: Event) => void) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive && select) {\n      nextTick(() => {\n        select(true)\n      })\n    }\n  }, {\n    immediate: true,\n  })\n}\n","// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useSelectLink } from '@/composables/selectLink'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport type VBtnSlots = MakeSlots<{\n  default: []\n  prepend: []\n  append: []\n  loader: []\n}>\n\nexport const VBtn = genericComponent<VBtnSlots>()({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined,\n    },\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol,\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    block: Boolean,\n    stacked: Boolean,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'button' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'elevated' } as const),\n  },\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n\n    const isActive = computed(() => {\n      if (props.active !== undefined) {\n        return props.active\n      }\n\n      if (link.isLink.value) {\n        return link.isActive?.value\n      }\n\n      return group?.isSelected.value\n    })\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border)\n    })\n    const valueAttr = computed(() => {\n      if (props.value === undefined) return undefined\n\n      return Object(props.value) === props.value\n        ? JSON.stringify(props.value, null, 0) : props.value\n    })\n\n    useSelectLink(link, group?.select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasPrepend = !!(props.prependIcon || slots.prepend)\n      const hasAppend = !!(props.appendIcon || slots.append)\n      const hasIcon = !!(props.icon && props.icon !== true)\n      const hasColor = (\n        (group?.isSelected.value && (!link.isLink.value || link.isActive?.value)) ||\n        (!group || link.isActive?.value)\n      )\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': isActive.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--loading': props.loading,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            locationStyles.value,\n            sizeStyles.value,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ (e: MouseEvent) => {\n            if (isDisabled.value) return\n\n            link.navigate?.(e)\n            group?.toggle()\n          } }\n          value={ valueAttr.value }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VIcon: {\n                  icon: props.prependIcon,\n                },\n              }}\n            >\n              <span class=\"v-btn__prepend\">\n                { slots.prepend?.() ?? (<VIcon />) }\n              </span>\n            </VDefaultsProvider>\n          ) }\n\n          <span class=\"v-btn__content\" data-no-activator=\"\">\n            <VDefaultsProvider\n              key=\"content\"\n              defaults={{\n                VIcon: {\n                  icon: hasIcon ? props.icon : undefined,\n                },\n              }}\n            >\n              { slots.default?.() ?? (\n                hasIcon && (\n                  <VIcon key=\"icon\" />\n                )\n              ) }\n            </VDefaultsProvider>\n          </span>\n\n          { !props.icon && hasAppend && (\n            <VDefaultsProvider\n              key=\"append\"\n              defaults={{\n                VIcon: {\n                  icon: props.appendIcon,\n                },\n              }}\n            >\n              <span class=\"v-btn__append\">\n                { slots.append?.() ?? (<VIcon />) }\n              </span>\n            </VDefaultsProvider>\n          ) }\n\n          { !!props.loading && (\n            <span key=\"loader\" class=\"v-btn__loader\">\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  size=\"23\"\n                  width=\"2\"\n                />\n              ) }\n            </span>\n          ) }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n","// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { animate, genericComponent, pick, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport const VTab = genericComponent()({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n","export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { useDisplay } from '@/composables'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed, ref, watch } from 'vue'\nimport { clamp, genericComponent, IN_BROWSER, useRender } from '@/util'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: [SlideGroupSlot]\n  prev: [SlideGroupSlot]\n  next: [SlideGroupSlot]\n}\n\nexport const VSlideGroup = genericComponent<VSlideGroupSlots>()({\n  name: 'VSlideGroup',\n\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol,\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next',\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active',\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = ref(false)\n    const scrollOffset = ref(0)\n    const containerSize = ref(0)\n    const contentSize = ref(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = ref(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = ref(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = [...contentRef.value.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n        ]}\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VSlideGroup } from '@/components/VSlideGroup'\nimport { VTab } from './VTab'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n\n  props: {\n    alignTabs: {\n      type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n      default: 'start',\n    },\n    color: String,\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    fixedTabs: Boolean,\n    items: {\n      type: Array as PropType<TabItem[]>,\n      default: () => ([]),\n    },\n    stacked: Boolean,\n    bgColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    sliderColor: String,\n    modelValue: null,\n    mandatory: {\n      type: [Boolean, String] as PropType<boolean | 'force'>,\n      default: 'force',\n    },\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => (\n      <VSlideGroup\n        v-model={ model.value }\n        class={[\n          'v-tabs',\n          `v-tabs--${props.direction}`,\n          `v-tabs--align-tabs-${props.alignTabs}`,\n          {\n            'v-tabs--fixed-tabs': props.fixedTabs,\n            'v-tabs--grow': props.grow,\n            'v-tabs--stacked': props.stacked,\n          },\n          densityClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={[\n          { '--v-tabs-height': convertToUnit(props.height) },\n          backgroundColorStyles.value,\n        ]}\n        role=\"tablist\"\n        symbol={ VTabsSymbol }\n        mandatory={ props.mandatory }\n        direction={ props.direction }\n      >\n        { slots.default ? slots.default() : parsedItems.value.map(item => (\n          <VTab { ...item } key={ item.title } />\n        )) }\n      </VSlideGroup>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n","import type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n","import { Box } from '@/util/box'\n\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms (el: HTMLElement): Box {\n  const rect = el.getBoundingClientRect()\n  const style = getComputedStyle(el)\n  const tx = style.transform\n\n  if (tx) {\n    let ta, sx, sy, dx, dy\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[5]\n      dx = +ta[12]\n      dy = +ta[13]\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[3]\n      dx = +ta[4]\n      dy = +ta[5]\n    } else {\n      return new Box(rect)\n    }\n\n    const to = style.transformOrigin\n    const x = rect.x - dx - (1 - sx) * parseFloat(to)\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1))\n    const w = sx ? rect.width / sx : el.offsetWidth + 1\n    const h = sy ? rect.height / sy : el.offsetHeight + 1\n\n    return new Box({ x, y, width: w, height: h })\n  } else {\n    return new Box(rect)\n  }\n}\n\nexport function animate (\n  el: Element,\n  keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\n  options?: number | KeyframeAnimationOptions\n) {\n  if (typeof el.animate === 'undefined') return { finished: Promise.resolve() }\n\n  const animation = el.animate(keyframes, options)\n  if (typeof animation.finished === 'undefined') {\n    (animation as any).finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation)\n      }\n    })\n  }\n\n  return animation\n}\n","export class Box {\n  x: number\n  y: number\n  width: number\n  height: number\n\n  constructor ({ x, y, width, height }: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }) {\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n  }\n\n  get top () { return this.y }\n  get bottom () { return this.y + this.height }\n  get left () { return this.x }\n  get right () { return this.x + this.width }\n}\n\nexport function getOverflow (a: Box, b: Box) {\n  return {\n    x: {\n      before: Math.max(0, b.left - a.left),\n      after: Math.max(0, a.right - b.right),\n    },\n    y: {\n      before: Math.max(0, b.top - a.top),\n      after: Math.max(0, a.bottom - b.bottom),\n    },\n  }\n}\n","export const standardEasing = 'cubic-bezier(0.4, 0, 0.2, 1)'\nexport const deceleratedEasing = 'cubic-bezier(0.0, 0, 0.2, 1)' // Entering\nexport const acceleratedEasing = 'cubic-bezier(0.4, 0, 1, 1)' // Leaving\n"],"names":["VProgressCircular","genericComponent","name","props","bgColor","String","color","indeterminate","Boolean","modelValue","type","Number","default","rotate","width","makeSizeProps","makeTagProps","tag","makeThemeProps","setup","_ref","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","PI","root","ref","themeClasses","provideTheme","sizeClasses","sizeStyles","useSize","textColorClasses","textColorStyles","useTextColor","toRef","underlayColorClasses","underlayColorStyles","intersectionRef","isIntersecting","useIntersectionObserver","resizeRef","contentRect","useResizeObserver","normalizedValue","computed","max","min","parseFloat","size","value","diameter","strokeWidth","strokeDashOffset","convertToUnit","watchEffect","useRender","_createVNode","undefined","transform","useSelectLink","link","select","watch","isActive","isLink","nextTick","immediate","VBtn","directives","Ripple","active","symbol","VBtnToggleSymbol","flat","icon","Function","Object","prependIcon","IconValue","appendIcon","block","stacked","ripple","makeBorderProps","makeRoundedProps","makeDensityProps","makeDimensionProps","makeElevationProps","makeGroupItemProps","makeLoaderProps","makeLocationProps","makePositionProps","makeRouterProps","makeVariantProps","variant","emits","val","attrs","borderClasses","useBorder","colorClasses","colorStyles","variantClasses","useVariant","densityClasses","useDensity","dimensionStyles","useDimension","elevationClasses","useElevation","loaderClasses","useLoader","locationStyles","useLocation","positionClasses","usePosition","roundedClasses","useRounded","group","useGroupItem","useLink","isSelected","isDisabled","disabled","isElevated","border","valueAttr","JSON","stringify","Tag","hasPrepend","prepend","hasAppend","append","hasIcon","hasColor","_withDirectives","selectedClass","loading","href","e","navigate","toggle","genOverlays","VDefaultsProvider","VIcon","loader","_resolveDirective","VTab","fixed","title","sliderColor","hideSlider","direction","sliderColorClasses","sliderColorStyles","isHorizontal","rootEl","sliderEl","updateSlider","_ref2","prevEl","$el","parentElement","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","sign","abs","scale","initialScale","sigma","animate","backgroundColor","transformOrigin","Array","fill","duration","easing","standardEasing","btnProps","pick","_mergeProps","VTabsSymbol","bias","c","x","calculateUpdatedOffset","selectedElement","containerSize","contentSize","isRtl","currentScrollOffset","clientSize","clientWidth","clientHeight","offsetStart","offsetLeft","offsetTop","adjustedOffsetStart","totalSize","itemOffset","additionalOffset","calculateCenteredOffset","offsetCentered","VSlideGroupSymbol","Symbol","for","VSlideGroup","centerActive","nextIcon","prevIcon","showArrows","validator","v","includes","makeGroupProps","useRtl","mobile","useDisplay","useGroup","isOverflowing","scrollOffset","containerRef","containerRect","contentRef","firstSelectedIndex","selected","length","items","findIndex","item","id","lastSelectedIndex","IN_BROWSER","frame","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","disableTransition","startTouch","startOffset","onTouchstart","touches","onTouchmove","onTouchend","maxScrollOffset","onScroll","isFocused","onFocusin","el","composedPath","onFocusout","onFocus","relatedTarget","contains","focus","onKeydown","key","location","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","querySelectorAll","filter","hasAttribute","scrollTo","newAbsoluteOffset","clamp","contentStyles","scrollAmount","transition","willChange","slotProps","next","prev","hasAffixes","hasPrev","hasNext","onClick","VFadeTransition","parseItems","map","VTabs","alignTabs","fixedTabs","grow","height","mandatory","model","useProxiedModel","parsedItems","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","provideDefaults","$event","nullifyTransforms","rect","style","tx","ta","sx","sy","dx","dy","startsWith","slice","split","Box","to","y","indexOf","w","offsetWidth","h","offsetHeight","keyframes","options","finished","Promise","resolve","animation","onfinish","constructor","this","top","bottom","left","right","getOverflow","a","b","before","after","deceleratedEasing","acceleratedEasing"],"sourceRoot":""}